{"version":3,"file":"static/js/149.405d686b.chunk.js","mappings":"2LAWA,EATkB,SAAHA,GAAmB,IAAbC,EAAKD,EAALC,MACnB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKF,EAAMI,SACXD,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaP,EAAMQ,IAAKN,SAAC,mBAGvC,ECGA,EAVkB,SAAHH,GAAoB,IAAdU,EAAMV,EAANU,OACnB,OACEN,EAAAA,EAAAA,KAAA,OAAAD,SACGO,EAAOC,KAAI,SAAAV,GAAK,OACfG,EAAAA,EAAAA,KAACQ,EAAS,CAAgBX,MAAOA,GAAjBA,EAAMQ,GAAoB,KAIlD,C,8ICaA,EArBmB,SAAHT,GAAsB,IAAhBa,EAAQb,EAARa,SACpBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAYtB,OACEd,EAAAA,EAAAA,MAAA,QAAMW,SAPa,SAACO,GACpBA,EAAEC,iBACFR,EAASK,GACTC,EAAS,GACX,EAG+BhB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOkB,KAAK,OAAOC,MAAOL,EAAOM,SAZhB,SAACJ,GACpBD,EAASC,EAAEK,OAAOF,MACpB,KAWInB,EAAAA,EAAAA,KAAA,UAAQkB,KAAK,SAAQnB,SAAC,aAG5B,E,SCeA,EA9Be,WACb,IAAAW,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCJ,EAAMM,EAAA,GAAEU,EAASV,EAAA,GACxBW,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAZ,EAAAA,EAAAA,GAAAU,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BX,EAAQY,EAAaE,IAAI,UAAY,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAKf,EAAL,CACA,IAAMgB,EAAW,eAAAlC,GAAAmC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEOC,EAAAA,EAAAA,IAAU,4FAADlC,OAA6FU,IAAS,KAAD,EAA/HoB,EAAQC,EAAAI,KACdjB,EAAUY,EAASM,KAAKC,SAASN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEjCQ,QAAQC,MAAM,yBAAwBT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAElD,kBAPgB,OAAArC,EAAAkD,MAAA,KAAAC,UAAA,KAQjBjB,GATkB,CAUpB,GAAG,CAAChB,IAMJ,OACEhB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACgD,EAAU,CAACvC,SANK,SAACU,GACpBQ,EAAgB,CAAEb,MAAOK,GAC3B,KAKInB,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CAAC3C,OAAQA,MAGzB,C","sources":["components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst MovieCard = ({ movie }) => {\n  return (\n    <div>\n      <h3>{movie.title}</h3>\n      <Link to={`/movies/${movie.id}`}>More details</Link>\n    </div>\n  );\n};\n\nexport default MovieCard;","import MovieCard from '../MovieCard/MovieCard.jsx';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <div>\n      {movies.map(movie => (\n        <MovieCard key={movie.id} movie={movie} />\n      ))}\n    </div>\n  );\n};\n\nexport default MovieList;","import { useState } from 'react';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={query} onChange={handleChange} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SearchForm from '../components/SearchForm/SearchForm.jsx';\nimport MovieList from '../components/MovieList/MovieList.jsx';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchMovies = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=0c9852925fc46007f1157388b4da307f&query=${query}`);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  const handleSearch = (value) => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSearch} />\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["_ref","movie","_jsxs","children","_jsx","title","Link","to","concat","id","movies","map","MovieCard","onSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","e","preventDefault","type","value","onChange","target","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","data","results","t0","console","error","stop","apply","arguments","SearchForm","MovieList"],"sourceRoot":""}